<!DOCTYPE html>
<html lang="en" dir="ltr">
	<head>
		<meta charset="utf-8">
		<title><%= player.name %></title>
		<script>
		<%

		function fBT(races){
			return races.filter(r => (track === "All") || r.track === track);
		}

		function calcTopX(races, x){
			let total = 0;
			fBT(races).map(r => r.result).flat().forEach((res, i) => {
				if(res.name === player.name && res.position <= x){
					total += 1;
				}
			});
			return total;
		}
		function addFormat(pos){
			pos = parseInt(pos);
			if(pos === 1){
				return "<span class='first'>1</span>"
			}
			else if(pos < 4){
				return `<span class='podium'>${pos}</span>`
			}
			else if(pos > 4){
				return `<span class='bad'>${pos}</span>`
			}
			else if(pos > 9){
				return `<span class='awful'>${pos}</span>`
			}
			return `${pos}`;
		}
		function formatChange(change){
			if(change > 0){
				return `<span class="green">+${change}</span>`
			}
			else if(change < 0){
				return `<span class="red">${change}</span>`
			}
			return `${change}`;
		}

		function sortedTracks(races, player){
			let valid = races.filter(r => r.result.some(p => p.name === player.name));
			let scores = {};
			valid.forEach((r, i) => {
				scores[r.track] = [...((scores[r.track]) ?? []), r.result.filter(p => p.name === player.name)[0].position];
			});

			let averages = [];
			Object.keys(scores).forEach((t, i) => {
				const avg = ( 4 - (scores[t].reduce((a, b) => a + b, 0) / scores[t].length));
				averages = [
					...averages,
					{
						name: t,
						average: avg * Math.pow(scores[t].length + 2, 0.35)
					}
				]
			});
			return averages.sort((a,b) => a.average - b.average);
		}

		%>
		</script>
		<style>
			*{
				font-family: sans-serif;
			}
			h3{
				display: inline-block;
				margin: 0;
			}
			h2, h5{
				display: inline-block;
				width: 6.5rem;
			}
			h5{
				font-weight: normal;
				font-size: 14pt;
			}
			body > a {
				padding: 0.5rem;
				border: 1px solid black;
				margin: 1rem;
				margin-top: 2rem;
				display: block;
				width: 8rem;
				text-align: center;
				font-weight: bolder;
				font-size: 14pt;
			}
			table, tr, thead, th{
				padding: 1rem;
				font-weight: normal;
			}
			th{
				border: 1px solid black;
			}
			.first{
				font-weight: bolder;
				color: gold;
			}
			.podium{
				font-weight: bold;
			}
			.bad{
				color: red;
			}
			.awful{
				color: darkred;
				text-decoration: line-through;
			}
			.green{
				color: green;
			}
			.red{
				color: red;
			}

			a{
				color: black;
			}
			a > h2 {
				text-decoration: underline;
			}
		</style>
	</head>
	<body>
		<h1><%= player.name %></h1>
		<div>
			<h3>Current Elo:</h3> <%= Math.round(player.elo[player.elo.length - 1]) %>
		</div>
		<div>
			<h3>Highest Elo:</h3> <%= Math.round(Math.max(...player.elo)) %>
		</div>
		<div>
			<h3>Race wins:</h3> <%= calcTopX(races, 0) %> (<%= Math.round(calcTopX(races, 0) / fBT(races).length * 100) %>%)
		</div>
		<div>
			<h3>Top Fours:</h3> <%= calcTopX(races, 3) %> (<%= Math.round(calcTopX(races, 3) / fBT(races).length * 100) %>%)
		</div>
		<div>
			<h3>Average finish:</h3> <%= Math.round(fBT(races).map(r => r.result).flat().filter(r => r.name === player.name).map(r => r.position).reduce((a, b) => a + b + 1, 0) / fBT(races).length * 10) / 10 %>
		</div>
		<div>
			<h3>Best Tracks:</h3>
			<ol>
				<% sortedTracks(races, player).reverse().slice(0,3).forEach((t)=> { %>
					<li>
						<a href="/track/<%= t.name %>">
							<%= t.name %>
						</a>
					</li>
				<% }) %>
			</ol>
			<h3>Worst Tracks:</h3>
			<ol>
				<% sortedTracks(races, player).slice(0,3).forEach((t, i)=> { %>
					<li value="<%= sortedTracks(races, player).length - i %>">
						<a href="/track/<%= t.name %>">
							<%= t.name %>
						</a>
					</li>
				<% }) %>
			</ol>
		</div>
		<br />
		<form action="<%= player.name %>">
			<select name="track" id="track">
				<option>All</option>
				<option>Baby Park</option>
				<option>Cheese Land</option>
				<option>Excitebike Arena</option>
				<option>Yoshi Valley</option>
				<option>New York Minute</option>
				<option>Mario Circuit 3 (SNES)</option>
				<option>Kalimari Desert</option>
				<option>Waluigi Pinball</option>
				<option>Sydney Sprint</option>
				<option>Snow Land</option>
				<option>Mushroom Gorge</option>
				<option>Sky-High Sundae</option>
				<option>Animal Crossing</option>
				<option>Big Blue</option>
				<option>Bone-Dry Dunes</option>
				<option>Bowser's Castle (Wii U)</option>
				<option>Cheep Cheep Beach</option>
				<option>Choco Mountain</option>
				<option>Cloudtop Cruise</option>
				<option>Coconut Mall</option>
				<option>DK Jungle</option>
				<option>Dolphin Shoals</option>
				<option>Donut Plains 3</option>
				<option>Dragon Driftway</option>
				<option>Dry Dry Desert</option>
				<option>Electrodrome</option>
				<option>Grumble Volcano</option>
				<option>Hyrule Circuit</option>
				<option>Ice Ice Outpost</option>
				<option>Koopa Cape</option>
				<option>Mario Circuit</option>
				<option>Mario Circuit (GBA)</option>
				<option>Mario Circuit (Wii U)</option>
				<option>Mario Kart Stadium</option>
				<option>Moo Moo Meadows</option>
				<option>Mount Wario</option>
				<option>Music Park</option>
				<option>Mute City</option>
				<option>Neo Bowser City</option>
				<option>Ninja Hideaway</option>
				<option>Paris Promenade</option>
				<option>Piranha Plant Slide</option>
				<option>Rainbow Road (N64)</option>
				<option>Rainbow Road (SNES)</option>
				<option>Rainbow Road (Wii U)</option>
				<option>Ribbon Road</option>
				<option>Royal Raceway</option>
				<option>Sherbet Land (GCN)</option>
				<option>Shroom Ridge</option>
				<option>Shy Guy Falls</option>
				<option>Sky Garden</option>
				<option>Sunshine Airport</option>
				<option>Super Bell Subway</option>
				<option>Sweet Sweet Canyon</option>
				<option>Thwomp Ruins</option>
				<option>Tick-Tock Clock</option>
				<option>Toad Circuit</option>
				<option>Toad Harbor</option>
				<option>Toad's Turnpike</option>
				<option>Tokyo Blur 1</option>
				<option>Twisted Mansion</option>
				<option>Wario Stadium (DS)</option>
				<option>Wario's Gold Mine</option>
				<option>Water Park</option>
				<option>Wild Woods</option>
				<option>Yoshi Circuit</option>
			</select>
			<input type="submit" value="Filter">
		</form>
		<table>
			<thead><tr>
				<th>Date</th>
				<th>Track</th>
				<th>Position</th>
				<th>Elo (before)</th>
				<th>Elo (after)</th>
				<th>Elo (change)</th>
			</tr></thead>
			<tbody>
				<% races.map((r, i) => {
					if((track === "All") || r.track === track){
						return {
							i,
							r
						}
					}
					return undefined;
				}).filter(r => !!r).forEach(o => { %>
					<tr>
						<th><%= new Date(o.r.date).toLocaleString().split(',')[0] %></th>
						<th><a href="/track/<%= o.r.track %>"><%= o.r.track %></a></th>
						<th><%- addFormat(o.r.result.filter(p => p.name === player.name)[0].position + 1) %></th>
						<th><%= Math.round(player.elo[o.i]) %></th>
						<th><%= Math.round(player.elo[o.i + 1]) %></th>
						<th><%- formatChange(Math.round(player.elo[o.i + 1] - player.elo[o.i])) %></th>
					</tr>
				<% }) %>

			</tbody>
		</table>
	</body>
</html>
